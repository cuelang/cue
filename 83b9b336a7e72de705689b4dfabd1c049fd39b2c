{
  "comments": [
    {
      "key": {
        "uuid": "5a618545_c5b1968d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000055
      },
      "writtenOn": "2020-01-13T09:30:34Z",
      "side": 1,
      "message": "Are attributes really defined on files rather than packages?",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0381dbd_0a59aec1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-13T12:41:01Z",
      "side": 1,
      "message": "Good point. It really is package indeed, I was naming it after where they are declared syntactically (SourceFile), but a better name is maybe something like \"at the top-level\" or \"can be a Declaration or associated with fields\", or something like that.",
      "parentUuid": "5a618545_c5b1968d",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4c8add0_078499d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000055
      },
      "writtenOn": "2020-01-13T09:30:34Z",
      "side": 1,
      "message": "s/precense/presence/",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb246e93_38808dc1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-13T12:41:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4c8add0_078499d4",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b647260_aa9d18ea",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 1386,
      "author": {
        "id": 1000055
      },
      "writtenOn": "2020-01-13T09:30:34Z",
      "side": 1,
      "message": "s/sequence to/sequence of/",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e34850c6_a9eb64ae",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 1386,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-13T12:41:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b647260_aa9d18ea",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dd667b9_cd3222bc",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 1388,
      "author": {
        "id": 1000055
      },
      "writtenOn": "2020-01-13T09:30:34Z",
      "side": 1,
      "message": "I think it would be worth defining how attribute values are compared for equality. For example, the same string might be written two different ways - would @foo(\"A\") be considered the same as @foo(\"\\u0041\") ?",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8651837f_4ecd64b1",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 1388,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-13T12:41:01Z",
      "side": 1,
      "message": "Values are balanced token sequences, so the token sequences should be equal. Tokens are not interpreted, so `\"A\"` would be different from `\"\\u0041\"`. Whitespace between tokens would be ignored. So @foo(a b) would be the same as @foo(a  b).\n\nWould it help to add an example?",
      "parentUuid": "6dd667b9_cd3222bc",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83a56d8c_e6647e4d",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 1388,
      "author": {
        "id": 1000055
      },
      "writtenOn": "2020-01-13T12:59:12Z",
      "side": 1,
      "message": "I think it would be worth adding those clarifications to the spec. I\u0027m not sure if it\u0027s a good idea to treat strings as different depending on the quoting style used or the way that the same character is expressed, but that can be changed later if it turns out to be a problem.",
      "parentUuid": "8651837f_4ecd64b1",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86e40ec3_f78a8c6e",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 1390,
      "author": {
        "id": 1000055
      },
      "writtenOn": "2020-01-13T09:30:34Z",
      "side": 1,
      "message": "It seems a bit odd to me that attributes can be associated with source files (as opposed to packages), as source files don\u0027t generally result in an externally visible entity. What\u0027s the reasoning for associating attributes with a source file rather than with a package?",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86ce0bb8_d51187ff",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 1390,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-13T12:41:01Z",
      "side": 1,
      "message": "Source files get unified into a single package, so as such they will end up in a package.\n\nI\u0027ll try to rephrase.",
      "parentUuid": "86e40ec3_f78a8c6e",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e39cdeb_9eead18b",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 1403,
      "author": {
        "id": 1000055
      },
      "writtenOn": "2020-01-13T09:30:34Z",
      "side": 1,
      "message": "Is that URL really a valid CUE token?",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f815093_78a7ba3c",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 1403,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-13T12:41:01Z",
      "side": 1,
      "message": "It is in a way, but it is not valid, indeed: the tokens are:\n\nIdentifier(https) Colon(:) Comment(//example.org/mystruct1.json)\n\nSo it should be quoted here. \n\nNote, though, that tokens are merely used to express valid values. This definition is taken almost literally from Swift. It is a quite effecitive solution for allowing almost free-form strings while still being compatible. Internally, attributes are just stored as their original string (notice the capitalization of the `attribute` production). \n\nDuplicates would only be filtered in the API. We could also say that \"implementations may drop tags with the same source representation.\" That also clarifies your above concern.\nThat way it is clear it is the API responsible for deduping based on whatever criteria.",
      "parentUuid": "0e39cdeb_9eead18b",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4708b4c7_a832b49c",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 1403,
      "author": {
        "id": 1000055
      },
      "writtenOn": "2020-01-13T12:59:12Z",
      "side": 1,
      "message": "Yeah, that seems reasonable.\nI wonder if it might be a good idea to exclude comments from the tokens under consideration. If attributes get complex, then it would be nice to be able to comment them without worrying about breaking things. Also, do comma-insertion rules apply inside attributes? Presumably they do, but it might be worth being explicit about that.",
      "parentUuid": "8f815093_78a7ba3c",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c80d9f16_f64205c1",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 1403,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-15T14:43:10Z",
      "side": 1,
      "message": "Yes, it is just a normal token sequence, so comma rules apply. I would express equality either in terms of a token sequence or string, but not a combination. So that means that it would be up to the consumer to interpret the tokens, which would just notice it as comment tokens.\n\nBut it may make sense to tighten this down in the future if it is clearer what it means for two token sequences to be equal.",
      "parentUuid": "4708b4c7_a832b49c",
      "revId": "83b9b336a7e72de705689b4dfabd1c049fd39b2c",
      "serverId": "cf2d04e9-fd44-3a25-9e02-2b093b5119d7",
      "unresolved": true
    }
  ]
}