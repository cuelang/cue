# DO NOT EDIT; generated by go run testdata/gen.go
#
#name: self-reference cycles
#evalPartial
-- in.cue --
a: b - 100
b: a + 100

c: [c[1], c[0]]
-- out/def --
a: b - 100
b: a + 100
c: [c[1], c[0]]
-- out/legacy-debug --
<0>{a: (<1>.b - 100), b: (<1>.a + 100), c: [<1>.c[1],<1>.c[0]]}
-- out/compile --
--- in.cue
{
  a: (〈0;b〉 - 100)
  b: (〈0;a〉 + 100)
  c: [
    〈0;c〉[1],
    〈0;c〉[0],
  ]
}
-- out/eval --
(struct){
  a: (_|_){
    // [incomplete] incomplete
  }
  b: (_|_){
    // [incomplete] incomplete
  }
  c: (list){
    0: (_){ _ }
    1: (_){ _ }
  }
}
