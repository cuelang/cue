#name: interpolation
#evalPartial
-- in.cue --
a: "\(4)"
b: "one \(a) two \( a+c )"
c: "one"
d: "\(r)"
u: "\(_)"
r: _
e: "\([])"
-- out/def --
a: "4"
b: "one 4 two 4one"
c: "one"
d: "\(r)"
r: _
u: "\(_)"
e: _|_ // expression in interpolation must evaluate to a number kind or string (found list)
-- out/legacy-debug --
<0>{a: "4", b: "one 4 two 4one", c: "one", d: ""+<1>.r+"", r: _, u: ""+_+"", e: _|_([]:expression in interpolation must evaluate to a number kind or string (found list))}
