# DO NOT EDIT; generated by go run testdata/gen.go
#
#name: custom validators
#evalPartial
-- in.cue --
import "strings"

a: strings.ContainsAny("ab")
a: "after"

b: strings.ContainsAny("c")
b: "dog"

c: strings.ContainsAny("d") & strings.ContainsAny("g")
c: "dog"
-- out/def --
a: "after"
b: _|_ // invalid value "dog" (does not satisfy strings.ContainsAny("c"))
c: "dog"
-- out/legacy-debug --
<0>{a: "after", b: _|_(strings.ContainsAny ("c"):invalid value "dog" (does not satisfy strings.ContainsAny("c"))), c: "dog"}
-- out/eval --
Errors:
invalid value "dog" (does not satisfy strings.ContainsAny("c"))

Result:
(_|_){
  // [eval]
  a: (string){ "after" }
  b: (_|_){
    // [eval] invalid value "dog" (does not satisfy strings.ContainsAny("c"))
  }
  c: (string){ "dog" }
}
