-- in.cue --
a: {
    // Nested embeddings should not increase the count
    {{
      b
      c
      d: b
      e: c
    }}
    c: {}
}
b: {

}
s: "foo"
c: s

// s is technically in a new struct here so it will have a one higher count than
// the one before.
d: [s]: 3

e: { }
e & { // Is this allowed? Probably not as per comprehension rule (ref fixes.)
    e: {}
}

X=["foo"]: b: X | null
[Y="bar"]: b: Y

B = {open: int}
f: B

-- out/compile --
--- in.cue
{
  a: {
    {
      {
        〈1;b〉
        〈0;c〉
        d: 〈1;b〉
        e: 〈0;c〉
      }
    }
    c: {}
  }
  b: {}
  s: "foo"
  c: 〈0;s〉
  d: {
    [〈1;s〉]: 3
  }
  e: {}
  (〈0;e〉 & {
    e: {}
  })
  ["foo"]: {
    b: (〈1;(〈1;-〉)〉|null)
  }
  ["bar"]: {
    b: 〈1;-〉
  }
  f: 〈B;{
    open: int
  }〉
}
