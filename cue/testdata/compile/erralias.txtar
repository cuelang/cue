-- in.cue --
let X = {}

[Y="foo"]: 3
a: Y

"\(b)" :: 3
b: "foo"

c: {}
for x in c { a: E }

-- out/compile --
unreferenced alias or let clause X:
    ./in.cue:1:1
a: illegal reference Y:
    ./in.cue:4:4
definitions not supported for interpolations:
    ./in.cue:6:1
for[].a: reference "E" not found:
    ./in.cue:10:17
--- in.cue
{
  ["foo"]: 3
  a: _|_(illegal reference Y)
  "\(〈0;b〉)": 3
  b: "foo"
  c: {}
  for _, x in 〈0;c〉 {
    a: _|_(reference "E" not found)
  }
}
