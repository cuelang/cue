// Copyright 2020 CUE Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +build ignore

package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"log"
	"path/filepath"
	"text/template"

	"golang.org/x/tools/go/packages"
)

const genFile = "interfaces.go"

const genTmpl = `// Code generated by gen.go. DO NOT EDIT.

package cmd

var interfaceFiles = map[string][]byte {
{{- range $fn, $content := .interfaceFiles }}
	"{{ $fn }}": {{ printf "%#v" $content }},
{{- end }}
}
`

func main() {
	log.SetFlags(0)

	// load the interfaces
	pkgs, err := packages.Load(nil, ".")
	if err != nil {
		log.Fatalf("Error: %v", err)
	}
	if len(pkgs[0].Errors) > 0 {
		var buf bytes.Buffer
		for _, e := range pkgs[0].Errors {
			fmt.Fprintf(&buf, "\t%v\n", e)
		}
		log.Fatalf("error loading embedded cuelang.org/go/cmd/cue/cmd/interfaces package:\n%s", buf.String())
	}

	// read interface files
	files := map[string][]byte{}
	for _, fn := range pkgs[0].GoFiles {
		content, err := ioutil.ReadFile(fn)
		if err != nil {
			log.Fatalf("Error: %v", err)
		}
		files[fn] = content
	}

	// parse template
	tmpl, err := template.New("interfaces.go").Parse(genTmpl)
	if err != nil {
		log.Fatalf("Error: %v", err)
	}

	// setup template data
	data := map[string]interface{}{
		"interfaceFiles": files,
	}

	// generate content
	var b bytes.Buffer
	err = tmpl.Execute(&b, data)
	if err != nil {
		log.Fatalf("Error: %v", err)
	}

	// write file
	err = ioutil.WriteFile(filepath.Join("..", genFile), b.Bytes(), 0644)
	if err != nil {
		log.Fatalf("Error: %v", err)
	}
}
