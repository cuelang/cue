// Code generated by cue extract go. DO NOT EDIT.

//cue:generate cue extract go github.com/prometheus/common/model

package model

// AlertNameLabel is the name of the label containing the an alert's name.
AlertNameLabel: "alertname"

// ExportedLabelPrefix is the prefix to prepend to the label names present in
// exported metrics if a label of the same name is added by the server.
ExportedLabelPrefix: "exported_"

// MetricNameLabel is the label name indicating the metric name of a
// timeseries.
MetricNameLabel: "__name__"

// SchemeLabel is the name of the label that holds the scheme on which to
// scrape a target.
SchemeLabel: "__scheme__"

// AddressLabel is the name of the label that holds the address of
// a scrape target.
AddressLabel: "__address__"

// MetricsPathLabel is the name of the label that holds the path on which to
// scrape a target.
MetricsPathLabel: "__metrics_path__"

// ReservedLabelPrefix is a prefix which is not legal in user-supplied
// label names.
ReservedLabelPrefix: "__"

// MetaLabelPrefix is a prefix for labels that provide meta information.
// Labels with this prefix are used for intermediate label processing and
// will not be attached to time series.
MetaLabelPrefix: "__meta_"

// TmpLabelPrefix is a prefix for temporary labels as part of relabelling.
// Labels with this prefix are used for intermediate label processing and
// will not be attached to time series. This is reserved for use in
// Prometheus configuration files by users.
TmpLabelPrefix: "__tmp_"

// ParamLabelPrefix is a prefix for labels that provide URL parameters
// used to scrape a target.
ParamLabelPrefix: "__param_"

// JobLabel is the label name indicating the job from which a timeseries
// was scraped.
JobLabel: "job"

// InstanceLabel is the label name used for the instance label.
InstanceLabel: "instance"

// BucketLabel is used for the label that defines the upper bound of a
// bucket of a histogram ("le" -> "less or equal").
BucketLabel: "le"

// QuantileLabel is used for the label that defines the quantile in a
// summary.
QuantileLabel: "quantile"

// A LabelName is a key for a LabelSet or Metric.  It has a value associated
// therewith.
LabelName: string

// LabelNames is a sortable LabelName slice. In implements sort.Interface.
LabelNames: [...LabelName]

// A LabelValue is an associated value for a LabelName.
LabelValue: string

// LabelValues is a sortable LabelValue slice. It implements sort.Interface.
LabelValues: [...LabelValue]

// LabelPair pairs a name with a value.
LabelPair: {
	Name:  LabelName
	Value: LabelValue
}

// LabelPairs is a sortable slice of LabelPair pointers. It implements
// sort.Interface.
LabelPairs: [...null | LabelPair]
