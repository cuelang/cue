// Code generated by cue get go. DO NOT EDIT.

// Package flag implements Go-style command-line flag parsing.
//
// To use it, create a task within a command with all flags defined for the
// command.
//
// Example:
//	import (
//		"tool/flag"
//		"tool/cli"
//	)
//
//	command: hello: {
//		var: {
//			flag.Set
//			name: *string | "world" // who to say hello to
//			n: name // a shorthand
//		}
//		say: {
//			cli.Print
//			text: "Hello \(var.name)!"
//		}
//	}
//
// These are teh supported tasks.
//
//     // A Value are all possible values allowed in flags.
//     Value :: Scalar | List
//
//     // Scalar are all possible non-composite flag values.
//     Scalar :: bool | number | string
//
//     // A List is a list of scalar values.
//     List :: [...Scalar]
//
//     // Name indicates a valid flag name.
//     Name :: =~"[a-z]([_a-z1-9]*[a-z1-9])?"
//
//     // Set defines a set of command line flags, the values of which will be set
//     // at run time. The doc comment of the flag is presented to the user in help.
//     //
//     // To define a shorthand, define the shorthand as a new flag referring to
//     // the flag of which it is a shorthand.
//     Set :: {
//     	$id: "tool/flag.Set"
//
//     	[Name]: Value
//     }
//
//     // Help prints the help text for the given command line flags.
//     Help :: {
//     	$id: "tool/flag.Help"
//
//     	set:  Set
//     	text: string
//     }
//
package flag
